// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Dish {
  id              String           @id
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  name            String
  description     String
  dietRestriction DietRestriction?
  nutritionInfo   NutritionInfo?
  station         Station          @relation(fields: [stationId], references: [id])
  stationId       String
}

model Restaurant {
  id        String         @id
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  name      RestaurantName @unique
  stations  Station[]
  menu      Menu[]
}

model Station {
  id           String     @id
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  name         String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  dishes       Dish[]
  menu         Menu[] // A station can be a part of multiple menus (multiple days)
}

enum MenuPeriodName {
  breakfast
  brunch
  lunch
  dinner
  latenight
}

enum RestaurantName {
  brandywine
  anteatery
}

model MenuPeriod {
  id    String         @id
  name  MenuPeriodName @unique
  menus Menu[]
  start DateTime
  end   DateTime
}

model Menu {
  id           String     @id
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  period       MenuPeriod @relation(fields: [periodId], references: [id])
  periodId     String
  date         DateTime
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  stations     Station[]
}

model DietRestriction {
  dish              Dish     @relation(fields: [dishId], references: [id])
  dishId            String   @id
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  containsFish      Boolean?
  containsMilk      Boolean?
  containsPeanuts   Boolean?
  containsSesame    Boolean?
  containsShellfish Boolean?
  containSoy        Boolean?
  containsTreeNuts  Boolean?
  containsWheat     Boolean?
  isGlutenFree      Boolean?
  isHalal           Boolean?
  isKosher          Boolean?
  isLocallyGrown    Boolean?
  isOrganic         Boolean?
  isVegan           Boolean?
  isVegetarian      Boolean?
}

model NutritionInfo {
  dish               Dish     @relation(fields: [dishId], references: [id])
  dishId             String   @id
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  servingSize        String?
  servingUnit        String?
  calories           String?
  caloriesFromFat    String?
  totalFat           String?
  transFat           String?
  cholesterol        String?
  sodum              String?
  totalCarbohydrates String?
  dietaryFiber       String?
  sugars             String?
  protein            String?
  vitaminA           String?
  vitaminC           String?
  calcium            String?
  iron               String?
  saturatedFat       String?
}

model Event {
  title       String
  link        String
  description String
  date        DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([title, link, date])
}

model PushToken {
  token String @id
}
